
solutionDetails.innerHTML += "<span><span id='inb4info'>Name of the level set: </span>" + solution.fileName + "</span><br \>";
solutionDetails.innerHTML += "<span><span id='inb4info'>Level ID in the dataset: </span>" + solution.levelIndex + "</span><br \>";
solutionDetails.innerHTML += "<span><span id='inb4info'>Method used to solve the level: </span>" + solution.method + "</span><br \>";
if (solution.arguments.length) {
    solutionDetails.innerHTML += "<span><span id='inb4info'>Submethod used: </span>" 
    switch(solution.arguments) {
        case 'pm':
            solutionDetails.innerHTML += "Pushes Moves";
            break;
        case 'mp':
            solutionDetails.innerHTML += "Moves Pushes";
            break;
        case 'bfs':
            solutionDetails.innerHTML += "BFS";
            break;
        case 'a*':
            solutionDetails.innerHTML += "A*";
    }
    solutionDetails.innerHTML += "</span><br \>";
}

solutionDetails.innerHTML += "<span><span id='inb4info'>Solving date: </span>" + solution.startDate + "</span><br \>";

if (solution.solution.length) {
    solutionDetails.innerHTML += "<span><span id='inb4info'>Solution string: </span><br /><span id='solutionStringText'>" + solution.solution + "</span></span></br>";
    solutionDetails.innerHTML += "<span><span id='inb4info'>Moves/Pushes taken: </span>" + solution.solution.length + "/" + solution.solution.match(/[A-Z]/g).length +"</span><br \>";
    solutionDetails.innerHTML += "<span><span id='inb4info'>Time taken to solve the level: </span>" + Math.round(solution.milisecondsTaken)/1000 + "s</span><br \>";
    let level = solution.level;
    let solutionString = solution.solution;
    let details = true;
    let playSokoban = false;
    <% include drawingCanvas %>
    <% include calculatingAllSteps %>
    <% include updateCurrentStep %>
} else {
    solutionDetails.innerHTML += "<span><span id='inb4info'>Timed out after: </span>" + Math.round(solution.milisecondsTaken)/1000 + "s</span><br \>";
    solutionDetails.innerHTML += "<span id='inb4info'>Level was not solved.</span>";
    document.getElementById("rangeInputContainer").remove();
    document.getElementById("levelPreview").remove();
}

document.addEventListener('keyup', (e) => {
    let currentStepNumber = document.getElementById("currentStep");
    if (e.code === "ArrowLeft") {
        currentStepNumber.value = parseInt(currentStepNumber.value)-1;
    } else if (e.code === "ArrowRight") {
        currentStepNumber.value = parseInt(currentStepNumber.value)+1
    }
    currentStepNumber.onchange();
});

const hints = [
    "You can advance the solution using left and right keyboard keys as well!",
    "30 is the highest a running speed can be set to, a level will be solved almost instantly!",
    "One focus mode allows you to lock the camera on player, while the other will try to focus the central point of the level.",
    "If you wanted to play the level manually, go to the Play mode of the application!",
    "Uppercase letters of the string solution signify moves with pushes, lowercase signify moves without pushes.",
    "Solution string is in LURD format, L stands for a move left, U for move up, R move right and D for move down.",
    "There are many different XSB level packs on the internet, give a different level set a shot as well!"
]

hintsRandomize = () => {
    let hintsDOM = document.getElementById("hints");
    let currentHint = hints[Math.floor(Math.random() * hints.length)];
    hintsDOM.innerHTML = "Hint: " + currentHint;
}
hintsRandomize();
setInterval(hintsRandomize, 10000);